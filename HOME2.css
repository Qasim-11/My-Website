body
{
    font-family: 'Open Sans', sans-serif;
        font-size: 20px;
    

}
a
{
color: #000205;
text-decoration: none;

}
nav{    
    text-align: center;
    box-sizing: border-box;
    width: auto;
    text-align: center;
    margin-right: auto;
    margin-left: auto;



    
}
*{
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    

}
li
{
    font-size: 18px;
    padding: 10px 10px 10px 10px ;
    text-transform: uppercase;
    letter-spacing: 2px;
    text-align: center;
    transition-duration: 0.4s;
    list-style: none;
    display: inline-block;
    flex-grow: 1;
    flex-wrap: nowrap;
    width: max-content;




}
li:hover{
    letter-spacing: 11px;
    box-shadow: inset 0px 0px 0px 1px black; 
    padding-left: 17px;

    

}
ul{
    display: flex;
    flex-direction: row;
    text-align: center;
    padding: 0px;
    width: fill;
}
/* .ss{
    border-right: 1px solid #000205;
    border-left: 1px solid #000205;

}
.ss2{
    border-right: 1px solid #000205;
    border-left: 1px solid #000205;
} */
h1, h2{ 
    padding: 5px;
    margin-left: 40px;
    box-shadow: inset 1px 0px 0px 0px #000205;

}
p{
    padding: 5px;
    margin-left: 15px;
    max-width: 1100px;
    text-transform: capitalize;
}
/* hi */
.c
{
    color:rgb(255, 255, 255);
    text-align: center;
}
    

.main
{
background-color: #FAFCFF ;
color: #000205;
min-height: 5000px;
}



.logo
{
    display: block;
    border-radius: 100px;
    width: 200px;
    margin-left: auto;
    margin-right: auto;
   
}

footer{
    text-align: center;
}


/* .quran{
    
    
    position: absolute;
    right: 0px;
    top: 0px;
    padding: 5px;
    max-width: 250px;
    z-index: 2;
    background-color: rgb(6,57,112) ;
    border-radius: 10px;
} */
.links{
    display: flex;
    flex-direction: row;
    flex-grow: 1;
    text-align: center;
    margin-right: auto;
    margin-left: auto;
    width: fill;
    max-width: 750px;
}
.ContectsLinksW{

    padding-left: 35px;
    padding-right: 35px;
    padding-top: 7px;
    padding-bottom: 7px;
    border-radius: 60px;
    box-shadow: inset 0px 0px 3px 0px #000205;
    transition-duration: 0.4s;
    display: inline-block;
    text-align: center;
    margin-left: 20px;
    flex-direction: row;
    flex-grow: 1;
    text-align: center;
    max-width: 375px;
}
.ContectsLinksG{

    padding-left: 35px;
    padding-right: 35px;
    padding-top: 7px;
    padding-bottom: 7px;
    border-radius: 60px;
    box-shadow: inset 0px 0px 3px 0px #000205;
    transition-duration: 0.4s;
    display: inline-block;
    text-align: center;
    margin-right: 40px;
    flex-direction: row;
    flex-grow: 1;
    text-align: center;
    max-width: 375px;
 


}
.ContectsLinksG:hover{
    background-color : gray;
    box-shadow: inset 0px 0px 3px 0px #000205;
    letter-spacing: 5px;   
    padding-left: 40px;
    padding-right: 40px;
}
.ContectsLinksW:hover{
    background-color : gray;
    box-shadow: inset 0px 0px 3px 0px #000205;
    letter-spacing: 5px;   
    padding-left: 40px;
    padding-right: 40px;
    padding-top: 7px;
    padding-bottom: 7px;
}



/*          
            NOTE             


        --- text decoration ---
text decoration -> makes a line in the middle of the text or abbove  it or bellow it overline, linethrough
        
        --- box sizing ---
box-sizing -> the defult is contint box , border-box recpects the element Horizently

        --- linear-gradient ---  
linear-gradient() => a color mixer, in the function ( to {diraction} or a degree represented by deg and a number, color 1, color 2, color n), you can set the amount of color you want by using % and a number just behind the color

        --- grids ---
grids are used for complex big lists, They are Horizental and Vertical pillars, You can build a Youtube H and V video cases . 

        --- filters ---
filters are used for hover stuff , some filters make black and white filters , some blur the image, and so on, you can google the filters and see the features.

        --- * ---
when you name a class like this :
*{}
every thing you add in this section will be added to all the elements in the page

        --- Transition ---
transition is the animationer,{transition : {durantion}}
you should add it with * if you want the same transform dauration with all the elements

        --- Transform ---
transform => the 2D and 3D player,
you can play with dimentions of the elements with it, like make the x larger or the y smaller,
differnce between transform and width and height is that the w and h deal with elements with resizing it,
but the transform stretches it, expand it without resizing it,
so if there is a div that has a text and you change the div with transform the text will look weired

-scale() is the x , y changer , 
you can scale image horizentaly by using scaleX()
Verticaly with scaleY() 
scale() dose both and can take 2 values
scale(1.2) or scale(0.8) these types of scales zoom in and zoom out (usualy used in images) 

- rotate() you can use rotate() with 
{deg => degree} or {rad => radiand} {grad => gradiand} or {turn => 90 degree , 1 turn , 2 turn etc}
if you want to use scale and rotate at the same time you should put them in the same line and don't repeat transform.
example :
transform : scale(1.3) rotate(7deg);

- translate is the mover , and it moves like game dev, It's used in animations

- skew() rotates the element but diffrently, it makes it look like a Parallelogram 
works exactly like scale()

-matrix



            
            
            
            
            
            
            
            
*/