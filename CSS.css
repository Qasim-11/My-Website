body
{
    font-family: 'Open Sans', sans-serif;
        font-size: 20px;
    

}
a
{
color: aliceblue;
text-decoration: none;

}
nav{
    background-color:rgb(6,57,112) ;
    position: relative;
    top : 0;
    right: 25px;
    display: inline;

    
}
li
{
    display: block;
    padding: 10px;
    border-left: 1px solid white;
    text-transform: uppercase;
    letter-spacing: 2px;
    text-align: left;
    transition-duration: 0.4s;

  
    
    
}
h1, h2{
    border-left: 2px solid white ;
    padding: 5px;
    margin-left: 40px;

}
p{
    padding: 5px;
    margin-left: 15px;
    max-width: 1100px;
    text-transform: capitalize;
}
/* hi */
.c
{
    color:rgb(255, 255, 255);
    text-align: center;
}
    

.main
{
background-color: rgb(6,57,112);
color: rgb(255, 255, 255);
min-height: 5000px;
}



.logo
{
    display: block;
    border: 1px solid black ;
    border-radius: 100px;
    width: 200px;
    margin-left: auto;
    margin-right: auto;
   
}
.ss{
    border-bottom: 1px solid white;
}
.f {
    margin-left: 15px;
}
/* .quran{
    
    
    position: absolute;
    right: 0px;
    top: 0px;
    padding: 5px;
    max-width: 250px;
    z-index: 2;
    background-color: rgb(6,57,112) ;
    border-radius: 10px;
} */
.ContectsLinksW{
    position: relative;
    left: 50px;
    padding-left: 35px;
    padding-right: 35px;
    padding-top: 7px;
    padding-bottom: 7px;
    border-radius: 60px;
    background-color: green;
    box-shadow: 0px 0px 5px 0px black;
    transition-duration: 0.4s;

}
.ContectsLinksG{
    position: relative;
    left: 50px;
    padding-left: 35px;
    padding-right: 35px;
    padding-top: 7px;
    padding-bottom: 7px;
    border-radius: 60px;
    background-color: rgb(175, 3, 3);
    box-shadow: 0px 0px 5px 0px black;
    transition-duration: 0.4s;
}
.ContectsLinksG:hover{
    background-color : gray;
    box-shadow: inset 0px 0px 10px 0px #000205;
    letter-spacing: 5px;   
    padding-left: 40px;
    padding-right: 40px;
}
.ContectsLinksW:hover{
    background-color : gray;
    box-shadow: inset 0px 0px 10px 0px #000205; 
    letter-spacing: 5px;   
    padding-left: 40px;
    padding-right: 40px;}

li:hover{
    padding-left: 35px;
    box-shadow:  0px 0px 0px 1px rgb(255, 255, 255);
    letter-spacing: 10px;
}
/*          
            NOTE             


        --- text decoration ---
text decoration -> makes a line in the middle of the text or abbove  it or bellow it overline, linethrough
        
        --- box sizing ---
box-sizing -> the defult is contint box , border-box recpects the element Horizently

        --- linear-gradient ---  
linear-gradient() => a color mixer, in the function ( to {diraction} or a degree represented by deg and a number, color 1, color 2, color n), you can set the amount of color you want by using % and a number just behind the color

        --- grids ---
grids are used for complex big lists, They are Horizental and Vertical pillars, You can build a Youtube H and V video cases . 

        --- filters ---
filters are used for hover stuff , some filters make black and white filters , some blur the image, and so on, you can google the filters and see the features.

        --- * ---
when you name a class like this :
*{}
every thing you add in this section will be added to all the elements in the page

        --- Transition ---
transition is the animationer,{transition : {durantion}}
you should add it with * if you want the same transform dauration with all the elements

        --- Transform ---
transform => the 2D and 3D player,
you can play with dimentions of the elements with it, like make the x larger or the y smaller,
differnce between transform and width and height is that the w and h deal with elements with resizing it,
but the transform stretches it, expand it without resizing it,
so if there is a div that has a text and you change the div with transform the text will look weired

-scale() is the x , y changer , 
you can scale image horizentaly by using scaleX()
Verticaly with scaleY() 
scale() dose both and can take 2 values
scale(1.2) or scale(0.8) these types of scales zoom in and zoom out (usualy used in images) 

- rotate() you can use rotate() with 
{deg => degree} or {rad => radiand} {grad => gradiand} or {turn => 90 degree , 1 turn , 2 turn etc}
if you want to use scale and rotate at the same time you should put them in the same line and don't repeat transform.
example :
transform : scale(1.3) rotate(7deg);

- translate is the mover , and it moves like game dev, It's used in animations

- skew() rotates the element but diffrently, it makes it look like a Parallelogram 
works exactly like scale()

-matrix compains all of the functions that are mentioned appove,
syntax => scaleX() SkewY() SkewX() ScaleY() translateX() translateY()

- origin